!function(){var a=window.EmberApp=Ember.Application.create({LOG_TRANSITIONS:!0,PRODUCTION_SETTINGS:!0,CROSS_DOMAIN:"",URL_BASE:"",CSRF_TOKEN:"",REQ_FORGERY_TOKEN:"",API_TOKEN:"",currentPath:""});console.log("this.PRODUCTION_SETTINGS: "+a.PRODUCTION_SETTINGS),a.PRODUCTION_SETTINGS===!0?(a.CROSS_DOMAIN=!1,a.URL_BASE=""):(a.CROSS_DOMAIN=!0,a.URL_BASE="http://localhost:3000")}(),function(){EmberApp.RegisterFormFieldComponent=Ember.Component.extend({keyUp:function(){console.log("KEY PRESSED");var a=this,b={type:this.get("kind"),value:this.get("val")};console.log("kind: "+this.get("kind")),console.log("value: "+this.get("val")),console.log("value: "+this.get("name")),a.outer.isRegister&&(b.access_token=EmberApp.API_TOKEN,Ember.$.get(EmberApp.URL_BASE+"/validateRegField",b).then(function(b){b.msg?a.set("errorMessage",b.msg):"pass-confirm"===a.get("name")?(console.log("SENDING PASS-CONFIRM ACTION"),a.outer.send("validatePassConfirm",a)):a.set("errorMessage","")}))}})}(),function(){EmberApp.ApplicationController=Ember.ArrayController.extend({init:function(){console.log("CSRF APP: "+Ember.$.cookie("csrftoken"))},updateCurrentPath:function(){EmberApp.set("currentPath",this.get("currentPath"))}.observes("currentPath"),checkAuth:function(a,b,c){alert("calling checkAuth");var d=this,e={},f="";b&&(e.role=b),e.access_token=$.cookie("apitoken"),f=c?"/protect_auth":"/check_auth",Ember.$.get(EmberApp.URL_BASE+f,e).then(function(b){"SUCCESS"===b.msg?c?d.transitionToRoute(a):(alert("resp[role]"+b.role),"type1"===b.role?(alert("transitioning to PATIENT"),d.transitionToRoute("patient")):"type2"===b.role?d.transitionToRoute("typetwo"):(alert("SHIT!"),d.transitionToRoute("index"))):d.transitionToRoute("index")},function(){d.transitionToRoute("index")})}})}(),function(){EmberApp.PatientController=Ember.Controller.extend({})}(),function(){EmberApp.RegisterController=Ember.Controller.extend({isRegister:!1,submitButtonVal:"Login",isSelected:"type1",lastFilter:"",init:function(){console.log("init"),EmberApp.Utils.getToken(function(){})},register:function(){var a={name:this.get("username"),password:this.get("password"),password_confirmation:this.get("password_confirm"),email:this.get("email"),role:this.isSelected},b=this;console.log("username in controller: "+this.get("username")),console.log(a),console.log("CSRF: "+Ember.$.cookie("csrftoken")),Ember.$.post(EmberApp.URL_BASE+"/signup",a).then(function(a){"SUCCESS"===a.msg?alert("User saved to db"):(alert("ERRORS: "+a.msg),b.set("errorMessages",a.msg))})},validatePassConfirm:function(a){console.log("got password_confirm action from component"),this.get("password_confirm")!==this.get("password")?a.set("errorMessage","password fields must match"):a.set("errorMessage","")},toggleReg:function(){this.toggleProperty("isRegister"),this.set("formAction","reg"),this.set("submitButtonVal","Register")},login:function(){console.log("LOGGING IN..."),console.log("isRegister: "+this.get("isRegister"));var a={name:this.get("username"),password:this.get("password"),xsrf:EmberApp.CSRF_TOKEN},b=this;Ember.$.post(EmberApp.URL_BASE+"/signin",a).then(function(a){if("REGISTER"===a.msg)alert("Transfer to register"),b.toggleReg();else if("SUCCESS"===a.msg){EmberApp.API_TOKEN=a.token,$.cookie("apitoken",a.token),alert("SUCCESS - SET API TOKEN TO: "+EmberApp.API_TOKEN),"type1"===a.role?b.set("lastFilter","patient"):b.set("lastFilter","typetwo");var c=b.get("previousTransition");c?(b.set("previousTransition",null),c.retry()):(alert("TRANSITIONIN"),b.transitionToRoute("index"))}else alert("ERROR"),b.set("loginError",a.msg)})},logout:function(){var a={};a.access_token=$.cookie("apitoken"),EmberApp.Utils.setupRefactored("POST","/signout")},reg:function(){console.log("REGISTERING NEW USER...")},auth:function(){this.get("isRegister")?(console.log("calling register"),this.register()):(console.log("calling login"),this.login())}})}(),function(){EmberApp.Type2Controller=Ember.Controller.extend({})}(),function(){EmberApp.Store=DS.Store.extend({adapter:DS.FixtureAdapter.create()})}(),function(){EmberApp.AuthenticatedRoute=Ember.Route.extend({authorized:!0,beforeModel:function(a){this.protectAuthRewrite(a,this.role,this.authorize,this.isIndex)},protectAuthRewrite:function(a,b,c,d){var e=this,f={};b&&(f.role=b),c&&(f.authorize=!0),f.access_token=$.cookie("apitoken"),Ember.$.get(EmberApp.URL_BASE+"/client_redirect_auth",f).then(function(b){var c=e.controllerFor("register");if("UNAUTHORIZED"===b.msg){alert("NOT AUTH: "+a);var f=c.get("previousTransition");console.log(f),f?f.retry():e.transitionTo("index")}else c.set("previousTransition",a);d&&("type1"===b.role?(alert("transitioning to PATIENT"),e.transitionTo("patient")):"type2"===b.role&&e.transitionTo("typetwo"))},function(){alert("STOP"),e.transitionTo("register")})},protectAuth:function(a,b){var c=this,d={};a&&(d.role=a),d.access_token=$.cookie("apitoken"),Ember.$.get(EmberApp.URL_BASE+"/protect_auth",d).then(function(a){var d=c.controllerFor("register");if("UNAUTHORIZED"===a.msg){alert("NOT AUTH: "+b);var e=d.get("previousTransition");e.retry()}else d.set("previousTransition",b)},function(){alert("STOP"),c.transitionTo("register")})}})}(),function(){EmberApp.IndexRoute=EmberApp.AuthenticatedRoute.extend({role:null,authorize:!1,isIndex:!0})}(),function(){EmberApp.PatientRoute=EmberApp.AuthenticatedRoute.extend({role:"type1",authorize:!0,isIndex:!1})}(),function(){EmberApp.TypetwoRoute=EmberApp.AuthenticatedRoute.extend({role:"type2",authorize:!0,isIndex:!1})}(),function(){EmberApp.ApplicationRoute=Ember.Route.extend({model:function(){return["red","yellow","blue"]}})}(),function(){EmberApp.RadioButton=Ember.View.extend({tagName:"input",type:"radio",attributeBindings:["name","type","value","checked:checked:"],click:function(){this.set("selection",this.$().val())},checked:function(){return this.get("value")==this.get("selection")}.property("selection")})}(),function(){EmberApp.Router.map(function(){this.route("register",{path:"/register"}),this.route("patient",{path:"/patient"}),this.route("typetwo",{path:"/typetwo"})})}(),function(){EmberApp.Utils=Ember.Object.create({getToken:function(){$.ajax({url:EmberApp.URL_BASE+"/csrf",crossDomain:EmberApp.CROSS_DOMAIN}).done(function(a){alert(a.csrf_token),EmberApp.CSRF_TOKEN=a.csrf_token})},setupAjax:function(){$.ajaxSetup({beforeSend:function(a){a.setRequestHeader("X-CSRF-TOKEN",EmberApp.CSRF_TOKEN)}})},setupAjaxForApiToken:function(){$.ajaxSetup({beforeSend:function(a){a.setRequestHeader("Authorization","Token token="+EmberApp.API_TOKEN)}})},setupRefactored:function(a,b){$.ajax({type:a,crossDomain:EmberApp.CROSS_DOMAIN,url:EmberApp.URL_BASE+b,beforeSend:function(a){a.setRequestHeader("X-CSRF-TOKEN",EmberApp.CSRF_TOKEN)},success:function(){alert("in")},error:function(){alert("POST failed")}})}})}();